
create table CXC_PRODUCTO (
    PRO_PRODUCTO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    PRO_DESCRIPCION VARCHAR(50),
    PRO_PRECIO DECIMAL(12,2),
    PRO_CANTIDAD DECIMAL(12,2),
    PRO_FECHA_CREACION date default sysdate,
    PRO_FECHA_ELIMINACION date default null,
    constraint producto_pk primary key (PRO_PRODUCTO)
);

create or replace type t_pro_productos_record as object (
    PRO_PRODUCTO NUMBER,
    PRO_DESCRIPCION VARCHAR(50),
    PRO_PRECIO DECIMAL(12,2),
    PRO_CANTIDAD DECIMAL(12,2),
    PRO_FECHA_CREACION date,
    PRO_FECHA_ELIMINACION date
);

create or replace type t_pro_productos_table as table of t_pro_productos_record;


CREATE OR REPLACE PROCEDURE pas_crear_producto(
    p_descripcion IN VARCHAR2,
    p_precio IN NUMBER,
    p_cantidad IN NUMBER
) 
IS
BEGIN
    INSERT INTO cxc_producto(pro_descripcion, pro_precio, pro_cantidad)
    VALUES(p_descripcion, p_precio, p_cantidad);
    COMMIT;
END;
//ACTUALIZAR PRODUCTO//
CREATE OR REPLACE PROCEDURE pas_actualizar_producto(
    p_id IN cxc_producto.pro_producto%TYPE,
    p_descripcion IN VARCHAR2,
    p_precio IN NUMBER,
    p_cantidad IN NUMBER
) 
IS
BEGIN
    UPDATE cxc_producto 
    SET pro_descripcion = p_descripcion,
        pro_precio = p_precio,
        pro_cantidad = p_cantidad
    WHERE pro_producto = p_id;
    COMMIT;
END;
//ELIMINAR PRODUCTO//
CREATE OR REPLACE PROCEDURE pas_eliminar_producto(
    p_id IN cxc_producto.pro_producto%TYPE
) 
IS
BEGIN
    UPDATE cxc_producto 
    SET PRO_FECHA_ELIMINACION = sysdate
    WHERE pro_producto = p_id;
    COMMIT;
END;
//LISTAR PRODUCTO//
CREATE OR REPLACE FUNCTION fas_listar_productos RETURN t_pro_productos_table 
AS
    CURSOR c_productos IS SELECT * FROM cxc_producto where PRO_FECHA_ELIMINACION is null;
    v_tabla  t_pro_productos_table := t_pro_productos_table();
    v_producto cxc_producto.pro_producto%TYPE;
    v_descripcion cxc_producto.pro_descripcion%TYPE;
    v_precio cxc_producto.pro_precio%TYPE;
    v_cantidad cxc_producto.pro_cantidad%TYPE;
    v_fecha_creacion cxc_producto.pro_fecha_creacion%TYPE;
    v_fecha_eliminacion cxc_producto.pro_fecha_eliminacion%TYPE;
BEGIN
    OPEN c_productos;
    LOOP
        FETCH c_productos INTO v_producto, v_descripcion, v_precio, v_cantidad, v_fecha_creacion, v_fecha_eliminacion;
        EXIT WHEN c_productos%NOTFOUND;
        v_tabla.EXTEND;
        v_tabla(v_tabla.LAST) := t_pro_productos_record(v_producto, v_descripcion, v_precio, v_cantidad, v_fecha_creacion, v_fecha_eliminacion);
    END LOOP;
    CLOSE c_productos;
    RETURN v_tabla;
END;
//BUSCAR PRODUCTO POR ID//
CREATE OR REPLACE FUNCTION fas_buscar_id_producto (
    p_id IN cxc_producto.pro_producto%TYPE
) RETURN t_pro_productos_table 
AS
    CURSOR c_productos IS SELECT * FROM cxc_producto WHERE pro_producto = p_id and PRO_FECHA_ELIMINACION is null;
    v_tabla  t_pro_productos_table := t_pro_productos_table();
    v_producto cxc_producto.pro_producto%TYPE;
    v_descripcion cxc_producto.pro_descripcion%TYPE;
    v_precio cxc_producto.pro_precio%TYPE;
    v_cantidad cxc_producto.pro_cantidad%TYPE;
    v_fecha_creacion cxc_producto.pro_fecha_creacion%TYPE;
    v_fecha_eliminacion cxc_producto.pro_fecha_eliminacion%TYPE;
BEGIN
    OPEN c_productos;
    LOOP
        FETCH c_productos INTO v_producto, v_descripcion, v_precio, v_cantidad, v_fecha_creacion, v_fecha_eliminacion;
        EXIT WHEN c_productos%NOTFOUND;
        v_tabla.EXTEND;
        v_tabla(v_tabla.LAST) := t_pro_productos_record(v_producto, v_descripcion, v_precio, v_cantidad, v_fecha_creacion, v_fecha_eliminacion);
    END LOOP;
    CLOSE c_productos;
    RETURN v_tabla;
END;
